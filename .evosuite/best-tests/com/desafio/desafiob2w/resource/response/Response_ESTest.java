/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 17 00:31:22 GMT 2019
 */

package com.desafio.desafiob2w.resource.response;

import org.junit.Test;
import static org.junit.Assert.*;
import com.desafio.desafiob2w.resource.response.Response;
import com.desafio.desafiob2w.resource.response.Status;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Response_ESTest extends Response_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Status status0 = Status.NOT_FOUND;
      Response response0 = new Response("", status0, "mrp@bF6BV4S.kTw");
      Status status1 = response0.getStatus();
      assertEquals("The requested resource was not found", status1.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Status status0 = Status.SUCCESS;
      Response response0 = new Response("$VALUES", status0, "lMf$");
      Object object0 = response0.getResponse();
      assertEquals("$VALUES", object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Status status0 = Status.INTERNAL_ERROR;
      Response response0 = new Response((Object) null, status0, "LZxxov2_WG");
      String string0 = response0.getMessage();
      assertEquals("LZxxov2_WG", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Status status0 = Status.SUCCESS;
      Response response0 = new Response("", status0, "");
      String string0 = response0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Status status0 = Status.INTERNAL_ERROR;
      Response response0 = new Response((Object) null, status0, "LZxxov2_WG");
      Object object0 = response0.getResponse();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Response response0 = new Response((Object) null, (Status) null, (String) null);
      response0.getStatus();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Response response0 = new Response((Object) null, (Status) null, (String) null);
      response0.setMessage((String) null);
      assertNull(response0.getMessage());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Status status0 = Status.NOT_FOUND;
      Response response0 = new Response((Object) null, status0, "");
      response0.setStatus(status0);
      assertEquals("", response0.getMessage());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Status status0 = Status.SUCCESS;
      Response response0 = new Response("$VALUES", status0, "lMf$");
      response0.setResponse(status0);
      assertEquals("lMf$", response0.getMessage());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Response response0 = new Response((Object) null, (Status) null, (String) null);
      String string0 = response0.getMessage();
      assertNull(string0);
  }
}
